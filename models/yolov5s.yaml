# YOLOv5 🚀 by Ultralytics, GPL-3.0 license

# Parameters
nc: 80  # number of classes
depth_multiple: 0.33  # model depth multiple     number=max(number * depth_multiple)
width_multiple: 0.50  # layer channel multiple   ch = ch * width_multiple
anchors:
  - [10,13, 16,30, 33,23]  # P3/8
  - [30,61, 62,45, 59,119]  # P4/16
  - [116,90, 156,198, 373,326]  # P5/32

# YOLOv5 v6.0 backbone
backbone:
  # [from, number, module, args]  args: [channels, kernel_size, stride, padding]
  [[-1, 1, Conv, [64, 6, 2, 2]],  # 0-P1/2  320 * 320
   [-1, 1, Conv, [128, 3, 2]],  # 1-P2/4    160 * 160
   [-1, 3, C3, [128]],
   [-1, 1, Conv, [256, 3, 2]],  # 3-P3/8    80 * 80
   [-1, 6, C3, [256]],
   [-1, 1, Conv, [512, 3, 2]],  # 5-P4/16   40 * 40
   [-1, 9, C3, [512]],
   [-1, 1, Conv, [1024, 3, 2]],  # 7-P5/32  20 * 20
   [-1, 3, C3, [1024]],
   [-1, 1, SPPF, [1024, 5]],  # 9           20 * 20
  ]

# YOLOv5 v6.0 head
head:
  [[-1, 1, Conv, [512, 1, 1]],
  # 上采样层，用于增加特征图的分辨率
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],     # 40 * 40  
   [[-1, 6], 1, Concat, [1]],  # cat backbone P4   # 40 * 40
   [-1, 3, C3, [512, False]],  # 13

   [-1, 1, Conv, [256, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],     # 80 * 80
   [[-1, 4], 1, Concat, [1]],  # cat backbone P3   # 80 * 80
   [-1, 3, C3, [256, False]],  # 17 (P3/8-small)

   [-1, 1, Conv, [256, 3, 2]],
   [[-1, 14], 1, Concat, [1]],  # cat head P4      # 40 * 40
   [-1, 3, C3, [512, False]],  # 20 (P4/16-medium) # 40 * 40

   [-1, 1, Conv, [512, 3, 2]],
   [[-1, 10], 1, Concat, [1]],  # cat head P5      # 20 * 20
   [-1, 3, C3, [1024, False]],  # 23 (P5/32-large) # 20 * 20

   [[17, 20, 23], 1, Detect, [nc, anchors]],  # Detect(P3, P4, P5)  # 检测层，用于生成最终的检测结果
  ]
